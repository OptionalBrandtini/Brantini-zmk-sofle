#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    behaviors {
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp ESC           &kp N1        &kp N2        &kp N3        &kp N4         &kp N5    &kp PAGE_UP     &kp N6  &kp N7     &kp N8     &kp N9     &kp N0      &kp DELETE
&kp TAB           &kp Q         &kp W         &kp E         &kp R          &kp T     &kp PAGE_DOWN   &kp Y   &kp U      &kp I      &kp O      &kp P       &kp BSLH
&kp LEFT_SHIFT    &kp A         &kp S         &kp D         &kp F          &kp G     &kp HOME        &kp H   &kp J      &kp K      &kp L      &kp SEMI    &kp APOS
&kp LEFT_CONTROL  &kp Z         &kp X         &kp C         &kp V          &kp B     &kp END         &kp N   &kp M      &kp COMMA  &kp DOT    &kp FSLH    &kp ENTER
&kp CAPSLOCK      &kp CAPSLOCK  &kp LEFT_GUI  &kp LEFT_ALT  &kp BACKSPACE  &mo 1     &kp LEFT_SHIFT  &mo 2   &kp SPACE  &mo 3      &kp UNDER  &kp DELETE
            >;

            sensor-bindings = <&scroll_encoder>;
            display-name = "LAYER0";
        };

        layer_1 {
            bindings = <
&kp GRAVE   &kp LS(NUMBER_1)  &kp LS(NUMBER_2)  &kp LS(NUMBER_3)  &kp LS(NUMBER_4)  &kp LS(N5)    &kp UP_ARROW     &kp LS(NUMBER_6)  &kp LS(N7)  &kp LS(N8)  &kp LS(N9)  &kp LS(N0)  &trans
&trans      &kp NUMBER_1      &kp NUMBER_2      &kp NUMBER_3      &kp NUMBER_4      &kp N5        &kp DOWN_ARROW   &kp NUMBER_6      &kp N7      &kp N8      &kp N9      &kp N0      &kp F12
&kp F1      &kp F2            &kp F3            &kp F4            &kp F5            &kp F6        &kp LEFT_ARROW   &kp F7            &kp F8      &kp F9      &kp F10     &kp F11     &kp F12
&trans      &trans            &trans            &trans            &trans            &trans        &kp RIGHT_ARROW  &kp LS(PLUS)      &kp MINUS   &kp COMMA   &kp DOT     &kp FSLH    &kp EQUAL
&kp C_MUTE  &trans            &trans            &trans            &trans            &kp SPACE     &kp LEFT_SHIFT   &trans            &trans      &trans      &trans      &trans
            >;

            display-name = "layer1";
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        layer_2 {
            bindings = <
&kp TILDE  &trans  &trans  &trans  &trans  &trans    &mmv MOVE_UP     &trans        &trans     &trans                &trans                 &trans     &trans
&trans     &trans  &trans  &trans  &trans  &trans    &mmv MOVE_DOWN   &trans        &trans     &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp UNDER  &kp PLUS
&trans     &trans  &trans  &trans  &trans  &trans    &mmv MOVE_LEFT   &kp MINUS     &kp EQUAL  &kp LBKT              &kp RBKT               &kp LBRC   &kp RBRC
&trans     &trans  &trans  &trans  &trans  &trans    &mmv MOVE_RIGHT  &kp LS(PLUS)  &trans     &kp LEFT_BRACE        &kp RIGHT_BRACE        &trans     &trans
&trans     &trans  &trans  &trans  &trans  &trans    &mkp LCLK        &trans        &trans     &trans                &trans                 &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            bindings = <
&trans          &trans  &trans  &rgb_ug RGB_COLOR_HSB(127,88,45)  &rgb_ug RGB_ON   &rgb_ug RGB_OFF    &trans  &trans  &trans    &trans    &trans     &trans  &trans
&trans          &trans  &trans  &trans                            &rgb_ug RGB_BRD  &rgb_ug RGB_BRI    &trans  &trans  &kp HOME  &kp UP    &kp END    &trans  &trans
&kp LEFT_SHIFT  &trans  &trans  &trans                            &rgb_ug RGB_SPD  &rgb_ug RGB_SPI    &trans  &trans  &kp LEFT  &kp DOWN  &kp RIGHT  &trans  &trans
&trans          &trans  &trans  &trans                            &rgb_ug RGB_EFR  &rgb_ug RGB_EFF    &trans  &trans  &trans    &trans    &trans     &trans  &trans
&trans          &trans  &trans  &trans                            &trans           &trans             &trans  &trans  &trans    &trans    &trans     &trans
            >;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
